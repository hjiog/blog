(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{718:function(s,a,t){"use strict";t.r(a);var n=t(6),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"项目中使用monorepo方式管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目中使用monorepo方式管理"}},[s._v("#")]),s._v(" 项目中使用monorepo方式管理")]),s._v(" "),t("h3",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),t("p",[s._v("利用yarn的workspaces概念和learna可以实现monorepo，使得多个项目集成在一个项目中管理。")]),s._v(" "),t("p",[s._v("优点：")]),s._v(" "),t("p",[s._v("可以用于多页应用的开发，一些公用的包可以不用发布即可当成node_module中的包来使用")]),s._v(" "),t("h3",{attrs:{id:"如何配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何配置"}},[s._v("#")]),s._v(" 如何配置")]),s._v(" "),t("h4",{attrs:{id:"yarn-workspace"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yarn-workspace"}},[s._v("#")]),s._v(" Yarn workspace")]),s._v(" "),t("p",[s._v("假如根目录下含有apps和packages目录，那么可将这两个目录当成子项目")]),s._v(" "),t("p",[s._v("根目录package.json添加")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"private"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"workspaces"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apps/*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"packages/*"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("注意，添加 "),t("code",[s._v("private: true")]),s._v(" 是防止工作区根目录被发布到 npm。")]),s._v(" "),t("p",[s._v("然后apps里面可以放置需要写入的页面如page1,page2,而packages目录可以存放项目中公用的一些包。")]),s._v(" "),t("p",[s._v("运行"),t("code",[s._v("lerna boostrap")]),s._v("即可在page1中可以直接import packages中的某些包。这些包会作为一个软连接存放在node_modules中。")]),s._v(" "),t("h4",{attrs:{id:"lerna"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lerna"}},[s._v("#")]),s._v(" lerna")]),s._v(" "),t("p",[s._v("lerna 用来管理多个包，优化维护多包的工作流，解决多个包互相依赖及发布的问题.")]),s._v(" "),t("h5",{attrs:{id:"lerna-json"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lerna-json"}},[s._v("#")]),s._v(" lerna.json")]),s._v(" "),t("p",[t("code",[s._v("lerna.json")]),s._v(" 内容大致如下")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"independent"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "version": "fixed",')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"npmClient"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yarn"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"publish"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"ignoreChanges"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ignored-file"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.md"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"message"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chore(release): publish"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"registry"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://npm.pkg.github.com"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"bootstrap"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"ignore"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"component-*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"npmClientArgs"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--no-package-lock"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"packages"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"packages/*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n复制代码\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[s._v("version")]),s._v(": 当前仓库的版本。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Fixed/Locked mode 这是默认的模式，Fixed 模式下所有的包共用一个版本号，这个版本号保存在 "),t("code",[s._v("lerna.json")]),s._v(" 的 "),t("code",[s._v("version")]),s._v(" 字段里面。所以当你运行 "),t("code",[s._v("lerna publish")]),s._v("，修改过的包会自动更新 "),t("code",[s._v("package.json")]),s._v(" 里的 "),t("code",[s._v("version")]),s._v(" 并发布到 npm，未修改的包则不会更新。还有一个问题值得注意，当 "),t("code",[s._v("lerna.json")]),s._v(" 的 "),t("code",[s._v("version")]),s._v(" 做了主版本号的改动时，所有的包都会更新版本并发布。")])]),s._v(" "),t("li",[t("p",[s._v("independent 模式允许每个包自行更新版本号，当你运行 "),t("code",[s._v("lerna publish")]),s._v(" 时，需要逐个选择修改过的包的版本。")])])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("npmClient")]),s._v(': 使用的客户端，默认是 "npm",可选值还有 "yarn"。')])]),s._v(" "),t("li",[t("p",[t("code",[s._v("command.publish.ignoreChanges")]),s._v(": 是个数组，在这个数组里面的文件变动，不会触发版本更新。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("command.publish.message")]),s._v(": 自定义发布新版本时的 git commit 信息。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("command.publish.registry")]),s._v(": 设置私有仓库，默认是发布到 "),t("code",[s._v("npmjs.org")]),s._v("。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("command.bootstrap.ignore")]),s._v(": 设置在这里的目录将不会参与 "),t("code",[s._v("lerna bootstrap")]),s._v("。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("command.bootstrap.npmClientArgs")]),s._v(": 执行 "),t("code",[s._v("lerna bootstrap")]),s._v(" 时会将此数组的所有值当作参数传给 "),t("code",[s._v("npm install")]),s._v("。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("command.bootstrap.scope")]),s._v(": 限制 "),t("code",[s._v("lerna bootstrap")]),s._v(" 在哪些包起作用。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("packages")]),s._v(": 用以指明所有包的路径。")])])]),s._v(" "),t("h5",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("lerna init")])])]),s._v(" "),t("p",[s._v("创建一个新的 lerna 仓库或更新已有仓库为新版本的 lerna，其中的选项 "),t("code",[s._v("--independent/-i")]),s._v(" 用来生成 "),t("code",[s._v("independent")]),s._v(" 模式的项目。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("lerna bootstrap")])])]),s._v(" "),t("p",[s._v("此命令会做以下几个事情：")]),s._v(" "),t("ol",[t("li",[s._v("npm install 为所有的包安装依赖。")]),s._v(" "),t("li",[s._v("为互相依赖的包创建软链接。")]),s._v(" "),t("li",[s._v("在所有 bootstrap 包（不包括 "),t("code",[s._v("command.bootstrap.ignore")]),s._v(" 中忽略的包）中执行 "),t("code",[s._v("npm run prepublish")]),s._v("（如果传了参数 "),t("code",[s._v("--ignore-prepublish")]),s._v(" 将跳过此步骤）。")]),s._v(" "),t("li",[s._v("在所有 bootstrap 包（不包括 "),t("code",[s._v("command.bootstrap.ignore")]),s._v(" 中忽略的包）中执行 "),t("code",[s._v("npm run prepare")]),s._v("。")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("lerna publish")])])]),s._v(" "),t("p",[s._v("发布所有修改过的包，会在终端提示(prompt)选择一个新版本，并会更新所有改动到 Git 和 npm.")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("lerna run [script]")])])]),s._v(" "),t("p",[s._v("在所有包中执行特定的 "),t("a",{attrs:{href:"https://docs.npmjs.com/misc/scripts",target:"_blank",rel:"noopener noreferrer"}},[s._v("npm script"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("lerna ls")])])]),s._v(" "),t("p",[s._v("列出当前仓库中的所有公共包（public packages），"),t("code",[s._v("private: true")]),s._v(" 的包不会列出。")])])}),[],!1,null,null,null);a.default=e.exports}}]);