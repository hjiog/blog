(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{745:function(t,e,a){"use strict";a.r(e);var s=a(6),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"请求头相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求头相关"}},[t._v("#")]),t._v(" 请求头相关")]),t._v(" "),a("ul",[a("li",[t._v("post请求如果是通过页面表单方式提交(不包含file)，那就是"),a("code",[t._v('"application/x-www-form-urlencoded"')]),t._v("，其参数组织形式，是键值对，类似于get方式的参数形式：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("name=张三&sex=男&tel=5354169\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("如果包含file，那就用"),a("code",[t._v("multipart/form-data")]),t._v(",浏览器会把整个表单以控件为单位分割，并为每个部分加上Content-Disposition(form-data或者file),Content-Type(默认为text/plain),name(控件name)等信息，并加上分割符")])]),t._v(" "),a("li",[a("p",[t._v("如果是json（要反序列化成字符串），那就是")])])]),t._v(" "),a("p",[a("code",[t._v('"application/json"')]),t._v("，而json大家都知道，是这样的：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n    name:"张三",\n    sex:"男",\n    tel:"5354169",\n}\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h2",{attrs:{id:"各种连接的概念与比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各种连接的概念与比较"}},[t._v("#")]),t._v(" 各种连接的概念与比较")]),t._v(" "),a("h3",{attrs:{id:"短连接和长连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#短连接和长连接"}},[t._v("#")]),t._v(" 短连接和长连接")]),t._v(" "),a("p",[t._v("连接的长短是针对tcp来说的，与http无关。 HTTP1.1默认是长连接，也就是默认Connection的值就是keep-alive，当然服务器也要做相应的设置才能生效。")]),t._v(" "),a("p",[t._v("这里的连接指的是tcp通道，长连接可以允许多个http请求复用这个通道，而短连接则每次开辟一个通道，开销较大")]),t._v(" "),a("h3",{attrs:{id:"短轮询和长轮询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#短轮询和长轮询"}},[t._v("#")]),t._v(" 短轮询和长轮询")]),t._v(" "),a("p",[t._v("长短轮询和长短连接没有必然的联系，就像狗和热狗。对于客户端来说，两者的操作都是每隔一段时间发送一次请求。")]),t._v(" "),a("p",[t._v("区别是在于服务端如何处理。服务器收到请求则立马返回数据的称为短轮询；长轮询则需要设置超时时间，若没有新数据则阻塞到时间结束，否则返回新数据。")]),t._v(" "),a("h3",{attrs:{id:"sse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sse"}},[t._v("#")]),t._v(" sse")]),t._v(" "),a("p",[t._v("严格地说，"),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/08/http.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP 协议"),a("OutboundLink")],1),t._v("无法做到服务器主动推送信息。但是，有一种变通方法，就是服务器向客户端声明，接下来要发送的是流信息（streaming）。")]),t._v(" "),a("p",[t._v("也就是说，发送的不是一次性的数据包，而是一个数据流，会连续不断地发送过来。这时，客户端不会关闭连接，会一直等着服务器发过来的新的数据流，视频播放就是这样的例子。本质上，这种通信就是以流信息的方式，完成一次用时很长的下载。")]),t._v(" "),a("p",[t._v("SSE 就是利用这种机制，使用流信息向浏览器推送信息。它基于 HTTP 协议，目前除了 IE/Edge，其他浏览器都支持。")]),t._v(" "),a("p",[t._v("特点：")]),t._v(" "),a("ul",[a("li",[t._v("SSE 使用 HTTP 协议，现有的服务器软件都支持。WebSocket 是一个独立协议。")]),t._v(" "),a("li",[t._v("SSE 属于轻量级，使用简单；WebSocket 协议相对复杂。")]),t._v(" "),a("li",[t._v("SSE 默认支持断线重连，WebSocket 需要自己实现。")]),t._v(" "),a("li",[t._v("SSE 一般只用来传送文本，二进制数据需要编码后传送，WebSocket 默认支持传送二进制数据。")]),t._v(" "),a("li",[t._v("SSE 支持自定义发送的消息类型。")])]),t._v(" "),a("p",[t._v("使用场景")]),t._v(" "),a("ul",[a("li",[t._v("显示实时市场新闻，市场数据，聊天程序")])]),t._v(" "),a("h3",{attrs:{id:"websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" webSocket")]),t._v(" "),a("p",[t._v("优点")]),t._v(" "),a("ul",[a("li",[t._v("天生拥有更少的开销（比如，头部信息）")])]),t._v(" "),a("p",[t._v("缺点")]),t._v(" "),a("ul",[a("li",[t._v("使用WebSockets，我们需要自己处理许多由HTTP处理的问题。")]),t._v(" "),a("li",[t._v("WebSocket是用于传输数据的另一种协议，它不会通过HTTP / 2连接自动多路复用。在服务器和客户端上实现自定义多路复用有点复杂。")]),t._v(" "),a("li",[t._v("WebSocket是基于帧的，而不是基于流的。当我们打开网络标签，看到WebSocket消息在frame中列出。")])]),t._v(" "),a("p",[t._v("使用场景")]),t._v(" "),a("ul",[a("li",[t._v("大型的多人在线游戏")]),t._v(" "),a("li",[t._v("需要在客户端和服务端建立一个真正的低延迟的，接近实时连接的时候")])]),t._v(" "),a("h2",{attrs:{id:"常用状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用状态码"}},[t._v("#")]),t._v(" 常用状态码")]),t._v(" "),a("h3",{attrs:{id:"信息响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信息响应"}},[t._v("#")]),t._v(" 信息响应")]),t._v(" "),a("h4",{attrs:{id:"_101-switching-protocol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_101-switching-protocol"}},[t._v("#")]),t._v(" 101 Switching Protocol")]),t._v(" "),a("p",[t._v("该代码是响应客户端的 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Upgrade",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Upgrade")]),a("OutboundLink")],1),t._v(" 标头发送的，并且指示服务器也正在切换的协议。如http切换到websocket")]),t._v(" "),a("h3",{attrs:{id:"成功响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#成功响应"}},[t._v("#")]),t._v(" 成功响应")]),t._v(" "),a("h4",{attrs:{id:"_200-ok"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_200-ok"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("200 OK")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("成功响应")]),t._v(" "),a("h4",{attrs:{id:"_201-created"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_201-created"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/201",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("201 Created")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("该请求已成功，并因此创建了一个新的资源。这通常是在POST请求，或是某些PUT请求之后返回的响应。")]),t._v(" "),a("h4",{attrs:{id:"_202-accepted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_202-accepted"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/202",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("202 Accepted")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("请求已经接收到，但还未响应，没有结果。意味着不会有一个异步的响应去表明当前请求的结果，预期另外的进程和服务去处理请求，或者批处理。")]),t._v(" "),a("h4",{attrs:{id:"_204-no-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_204-no-content"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("204 No Content")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。如果客户端是浏览器的话，那么用户浏览器应保留发送了该请求的页面，而不产生任何文档视图上的变化，即使按照规范新的或更新后的元信息应当被应用到用户浏览器活动视图中的文档。由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。")]),t._v(" "),a("h3",{attrs:{id:"重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重定向"}},[t._v("#")]),t._v(" 重定向")]),t._v(" "),a("h4",{attrs:{id:"_301-moved-permanently"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_301-moved-permanently"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/301",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("301 Moved Permanently")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。")]),t._v(" "),a("h4",{attrs:{id:"_302-found"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_302-found"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/302",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("302 Found")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。")]),t._v(" "),a("h4",{attrs:{id:"_303-see-other"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_303-see-other"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/303",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("303 See Other")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("对应当前请求的响应可以在另一个 URI 上被找到，而且客户端应当采用 GET 的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。")]),t._v(" "),a("h4",{attrs:{id:"_304-not-modified"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_304-not-modified"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/304",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("304 Not Modified")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304 响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。")]),t._v(" "),a("h3",{attrs:{id:"客户端响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端响应"}},[t._v("#")]),t._v(" 客户端响应")]),t._v(" "),a("h4",{attrs:{id:"_400-bad-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_400-bad-request"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/400",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("400 Bad Request")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("1、语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。")]),t._v(" "),a("p",[t._v("2、请求参数有误。")]),t._v(" "),a("h4",{attrs:{id:"_401-unauthorized"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_401-unauthorized"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/401",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("401 Unauthorized")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 WWW-Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么401响应代表着服务器验证已经拒绝了那些证书。如果401响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。")]),t._v(" "),a("h4",{attrs:{id:"_403-forbidden"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_403-forbidden"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/403",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("403 Forbidden")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("服务器已经理解请求，但是拒绝执行它。与 401 响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交。如果这不是一个 HEAD 请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个 404 响应，假如它不希望让客户端获得任何信息。")]),t._v(" "),a("h4",{attrs:{id:"_404-not-found"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_404-not-found"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/404",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("404 Not Found")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。假如服务器知道情况的话，应当使用410状态码来告知旧资源因为某些内部的配置机制问题，已经永久的不可用，而且没有任何可以跳转的地址。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。")]),t._v(" "),a("h3",{attrs:{id:"服务器响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器响应"}},[t._v("#")]),t._v(" 服务器响应")]),t._v(" "),a("h4",{attrs:{id:"_500-internal-server-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_500-internal-server-error"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/500",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("500 Internal Server Error")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("服务器遇到了不知道如何处理的情况。")]),t._v(" "),a("h4",{attrs:{id:"_501-not-implemented"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_501-not-implemented"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/501",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("501 Not Implemented")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("此请求方法不被服务器支持且无法被处理。只有"),a("code",[t._v("GET")]),t._v("和"),a("code",[t._v("HEAD")]),t._v("是要求服务器支持的，它们必定不会返回此错误代码。")]),t._v(" "),a("h4",{attrs:{id:"_502-bad-gateway"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_502-bad-gateway"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/502",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("502 Bad Gateway")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("此错误响应表明服务器作为网关需要得到一个处理这个请求的响应，但是得到一个错误的响应。")]),t._v(" "),a("h4",{attrs:{id:"_503-service-unavailable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_503-service-unavailable"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/503",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("503 Service Unavailable")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("服务器没有准备好处理请求。 常见原因是服务器因维护或重载而停机。 请注意，与此响应一起，应发送解释问题的用户友好页面。 这个响应应该用于临时条件和 "),a("code",[t._v("Retry-After")]),t._v("：如果可能的话，HTTP头应该包含恢复服务之前的估计时间。 网站管理员还必须注意与此响应一起发送的与缓存相关的标头，因为这些临时条件响应通常不应被缓存。")]),t._v(" "),a("h4",{attrs:{id:"_504-gateway-timeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_504-gateway-timeout"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/504",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("504 Gateway Timeout")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("当服务器作为网关，不能及时得到响应时返回此错误代码。")]),t._v(" "),a("h2",{attrs:{id:"常见http方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见http方法"}},[t._v("#")]),t._v(" 常见http方法")]),t._v(" "),a("ul",[a("li",[t._v("GET： 用于请求访问已经被URI（统一资源标识符）识别的资源，可以通过URL传参给服务器")]),t._v(" "),a("li",[t._v("POST：用于传输信息给服务器，主要功能与GET方法类似，但一般推荐使用POST方式。")]),t._v(" "),a("li",[t._v("PUT： 传输文件，报文主体中包含文件内容，保存到对应URI位置。")]),t._v(" "),a("li",[t._v("HEAD： 获得报文首部，与GET方法类似，只是不返回报文主体，一般用于验证URI是否有效。")]),t._v(" "),a("li",[t._v("DELETE：删除文件，与PUT方法相反，删除对应URI位置的文件。")]),t._v(" "),a("li",[t._v("OPTIONS：查询相应URI支持的HTTP方法")])]),t._v(" "),a("h2",{attrs:{id:"http2-0知多少"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http2-0知多少"}},[t._v("#")]),t._v(" http2.0知多少")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("采用二进制传输\n帧是数据传输的最小单位，以二进制传输代替原本的明文传输，原本的报文消息被划分为更小的数据帧，二进制协议解析起来更高效、“线上”更紧凑，更重要的是错误更少")])]),t._v(" "),a("li",[a("p",[t._v("多路复用\n在一个 TCP 连接上，我们可以向对方不断发送帧，每帧的 stream identifier 的标明这一帧属于哪个流，然后在对方接收时，根据 stream identifier 拼接每个流的所有帧组成一整块数据。\n把 HTTP/1.1 每个请求都当作一个流，那么多个请求变成多个流，请求响应数据分成多个帧，不同流中的帧交错地发送给对方，这就是 HTTP/2 中的多路复用。\n流的概念实现了单连接上多请求 - 响应并行，解决了线头阻塞的问题，减少了 TCP 连接数量和 TCP 连接慢启动造成的问题\n所以 http2 对于同一域名只需要创建一个连接就可以加载页面，而不是像 http/1.1 那样创建 6~8 个连接")])]),t._v(" "),a("li",[a("p",[t._v("头部压缩\n在 http/1.x 协议中，每次请求都会携带 header 数据，而类似 User-Agent, Accept-Language 等信息在每次请求过程中几乎是不变的，那么这些信息在每次请求过程中就变成了浪费。所以， http2 中提出了一个 HPACK 的压缩方式，用于减少 http header 在每次请求中消耗的流量")])]),t._v(" "),a("li",[a("p",[t._v("服务端推送 (Server Push)\n浏览器发送一个请求，服务器主动向浏览器推送与这个请求相关的资源，这样浏览器就不用发起后续请求。\nServer-Push 主要是针对资源内联做出的优化，相较于 http/1.1 资源内联的优势:")])])]),t._v(" "),a("div",{staticClass:"language-undefined line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  客户端可以缓存推送的资源\n  客户端可以拒收推送过来的资源\n  推送资源可以由不同页面共享\n  服务器可以按照优先级推送资源\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("流量控制\n每个 http2 流都拥有自己的公示的流量窗口，它可以限制另一端发送数据。对于每个流来说，两端都必须告诉对方自己还有足够的空间来处理新的数据，而在该窗口被扩大前，另一端只被允许发送这么多数据")])]),t._v(" "),a("h2",{attrs:{id:"跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),a("h3",{attrs:{id:"cors跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors跨域"}},[t._v("#")]),t._v(" cors跨域")]),t._v(" "),a("p",[t._v("浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。")]),t._v(" "),a("h5",{attrs:{id:"两种请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种请求"}},[t._v("#")]),t._v(" 两种请求")]),t._v(" "),a("p",[t._v("某些请求不会触发 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS#Preflighted_requests",target:"_blank",rel:"noopener noreferrer"}},[t._v("CORS 预检请求"),a("OutboundLink")],1),t._v("。本文称这样的请求为“简单请求”，请注意，该术语并不属于 "),a("a",{attrs:{href:"https://fetch.spec.whatwg.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fetch"),a("OutboundLink")],1),t._v(" （其中定义了 CORS）规范。若请求满足所有下述条件，则该请求可视为“简单请求”：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("使用下列方法之一：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("GET")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/HEAD",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("HEAD")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("POST")]),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[t._v("除了被用户代理自动设置的首部字段（例如 "),a("code",[t._v("Connection")]),t._v("，"),a("code",[t._v("User-Agent")]),t._v("）和在 Fetch 规范中定义为")]),t._v(" "),a("p",[t._v("禁用首部名称的其他首部，允许人为设置的字段为 Fetch 规范定义的 对 CORS 安全的首部字段集合")]),t._v(" "),a("p",[t._v("。该集合为：(若有自定义头部则不满足简单请求的条件)")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Accept")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Language",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Accept-Language")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Language",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Content-Language")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Content-Type")]),a("OutboundLink")],1),t._v(" （需要注意额外的限制）")]),t._v(" "),a("li",[a("code",[t._v("DPR")])]),t._v(" "),a("li",[a("code",[t._v("Downlink")])]),t._v(" "),a("li",[a("code",[t._v("Save-Data")])]),t._v(" "),a("li",[a("code",[t._v("Viewport-Width")])]),t._v(" "),a("li",[a("code",[t._v("Width")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Content-Type")]),t._v("的值仅限于下列三者之一：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("text/plain")])]),t._v(" "),a("li",[a("code",[t._v("multipart/form-data")])]),t._v(" "),a("li",[a("code",[t._v("application/x-www-form-urlencoded")])])])]),t._v(" "),a("li",[a("p",[t._v("请求中的任意"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequestUpload",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("XMLHttpRequestUpload")]),a("OutboundLink")],1),t._v(" 对象均没有注册任何事件监听器；"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequestUpload",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("XMLHttpRequestUpload")]),a("OutboundLink")],1),t._v(" 对象可以使用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/upload",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("XMLHttpRequest.upload")]),a("OutboundLink")],1),t._v(" 属性访问。")])]),t._v(" "),a("li",[a("p",[t._v("请求中没有使用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ReadableStream")]),a("OutboundLink")],1),t._v(" 对象。")]),t._v(" "),a("p",[a("strong",[t._v("不是简单请求的都是非简单请求")])])])]),t._v(" "),a("h5",{attrs:{id:"简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单请求"}},[t._v("#")]),t._v(" 简单请求")]),t._v(" "),a("p",[t._v("对于简单请求，浏览器直接发出CORS请求。具体来说，就是在头信息之中，增加一个"),a("code",[t._v("Origin")]),t._v("字段。")]),t._v(" "),a("p",[a("code",[t._v("Origin")]),t._v("字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("Origin")]),t._v("指定的源，不在许可范围内，服务器会返回一个正常的HTTP回应。浏览器发现，这个回应的头信息没有包含"),a("code",[t._v("Access-Control-Allow-Origin")]),t._v("字段，就知道出错了，从而抛出一个错误，被"),a("code",[t._v("XMLHttpRequest")]),t._v("的"),a("code",[t._v("onerror")]),t._v("回调函数捕获。注意，这种错误无法通过状态码识别，因为HTTP回应的状态码有可能是200。")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("Origin")]),t._v("指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Access-Control-Allow-Origin: http://api.bob.com\nAccess-Control-Allow-Credentials: true\nAccess-Control-Expose-Headers: FooBar\nContent-Type: text/html; charset=utf-8\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h5",{attrs:{id:"非简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非简单请求"}},[t._v("#")]),t._v(" 非简单请求")]),t._v(" "),a("p",[t._v('非简单请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为"预检"请求（preflight）。')]),t._v(" "),a("p",[t._v("浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的"),a("code",[t._v("XMLHttpRequest")]),t._v("请求，否则就报错。")]),t._v(" "),a("p",[t._v("服务端可以设置返回头允许跨域，如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"Access-Control-Allow-Origin"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://baidu.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 允许跨域的域名，")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"Access-Control-Allow-Headers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X-Session-Key"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 允许自定义的 headers，")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"Access-Control-Allow-Methods"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PUT,POST,DELETE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 允许请求的方法，")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"Access-Control-Max-Age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 1000秒内不再发送"预检"请求，')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h5",{attrs:{id:"cookie跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie跨域"}},[t._v("#")]),t._v(" cookie跨域")]),t._v(" "),a("p",[t._v("CORS请求默认不发送Cookie和HTTP认证信息。如果要把Cookie发到服务器，一方面要服务器同意，指定"),a("code",[t._v("Access-Control-Allow-Credentials")]),t._v("字段。")]),t._v(" "),a("div",{staticClass:"language-http line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Access-Control-Allow-Credentials")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("true")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("另一方面，开发者必须在AJAX请求中打开"),a("code",[t._v("withCredentials")]),t._v("属性。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("withCredentials "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("否则，即使服务器同意发送Cookie，浏览器也不会发送。或者，服务器要求设置Cookie，浏览器也不会处理。")]),t._v(" "),a("h2",{attrs:{id:"多路复用和keep-alive区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多路复用和keep-alive区别"}},[t._v("#")]),t._v(" 多路复用和keep alive区别？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("线头阻塞（Head-of-Line Blocking），HTTP1.X虽然可以采用keep alive来解决复用TCP的问题，但是还是无法解决请求阻塞问题。")])]),t._v(" "),a("li",[a("p",[t._v("所谓请求阻塞意思就是一条TCP的connection在同一时间只能允许一个请求经过，这样假如后续请求想要复用这个链接就必须等到前一个完成才行，正如上图左边表示的。")])]),t._v(" "),a("li",[a("p",[t._v("之所以有这个问题就是因为HTTP1.x需要每条请求都是可是识别，按顺序发送，否则server就无法判断该相应哪个具体的请求。")])]),t._v(" "),a("li",[a("p",[t._v("HTTP2采用多路复用是指，在同一个域名下，开启一个TCP的connection，每个请求以stream的方式传输，每个stream有唯一标识，connection一旦建立，后续的请求都可以复用这个connection并且可以同时发送，server端可以根据stream的唯一标识来相应对应的请求。")])])]),t._v(" "),a("h2",{attrs:{id:"https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" https")]),t._v(" "),a("h3",{attrs:{id:"对称加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对称加密"}},[t._v("#")]),t._v(" 对称加密")]),t._v(" "),a("p",[t._v("简单的加密方式,用同一个密钥进行加密解密")]),t._v(" "),a("p",[t._v("最大的问题就是"),a("strong",[t._v("这个密钥怎么让传输的双方知晓，同时不被别人知道")])]),t._v(" "),a("h3",{attrs:{id:"非对称加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密"}},[t._v("#")]),t._v(" 非对称加密")]),t._v(" "),a("p",[t._v("有两把密钥，通常一把叫做公钥、一把叫做私钥，用公钥加密的内容必须用私钥才能解开，同样，私钥加密的内容只有公钥能解开。非对称加密算法是非常耗时的,下面是对它的改良.")]),t._v(" "),a("h3",{attrs:{id:"非对称加密-对称加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密-对称加密"}},[t._v("#")]),t._v(" 非对称加密+对称加密")]),t._v(" "),a("p",[t._v("使用一次非对称加密传输要进行对称加密的密钥,后续的传输都使用对称加密传输\n请看一下这个过程：")]),t._v(" "),a("ol",[a("li",[t._v("某网站拥有用于非对称加密的公钥A、私钥A’。")]),t._v(" "),a("li",[t._v("浏览器像网站服务器请求，服务器把公钥A明文给传输浏览器。")]),t._v(" "),a("li",[t._v("浏览器随机生成一个用于对称加密的密钥X，用公钥A加密后传给服务器。")]),t._v(" "),a("li",[t._v("服务器拿到后用私钥A’解密得到密钥X。")]),t._v(" "),a("li",[t._v("这样双方就都拥有密钥X了，且别人无法知道它。之后双方所有数据都用密钥X加密解密。")])]),t._v(" "),a("h3",{attrs:{id:"中间人攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击"}},[t._v("#")]),t._v(" 中间人攻击")]),t._v(" "),a("ol",[a("li",[t._v("某网站拥有用于非对称加密的公钥A、私钥A’。")]),t._v(" "),a("li",[t._v("浏览器向网站服务器请求，服务器把公钥A明文给传输浏览器。")]),t._v(" "),a("li",[a("strong",[t._v("中间人劫持到公钥A，保存下来，把数据包中的公钥A替换成自己伪造的公钥B（它当然也拥有公钥B对应的私钥B’）")]),t._v("。")]),t._v(" "),a("li",[t._v("浏览器随机生成一个用于对称加密的密钥X，用"),a("strong",[t._v("公钥B")]),t._v("（浏览器不知道公钥被替换了）加密后传给服务器。")]),t._v(" "),a("li",[a("strong",[t._v("中间人劫持后用私钥B’解密得到密钥X，再用公钥A加密后传给服务器")]),t._v("。")]),t._v(" "),a("li",[t._v("服务器拿到后用私钥A’解密得到密钥X。")])]),t._v(" "),a("p",[t._v("这样在双方都不会发现异常的情况下，中间人得到了密钥B。"),a("strong",[t._v("根本原因是浏览器无法确认自己收到的公钥是不是网站自己的")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"数字证书"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字证书"}},[t._v("#")]),t._v(" 数字证书")]),t._v(" "),a("ul",[a("li",[t._v("明文信息 : 公钥 , 域名, 证书签名算法, 过期时间等其他信息")]),t._v(" "),a("li",[t._v("数字签名: 用证书签名算法将明文信息转成摘要(二进制数), 再用证书颁发机构(CA)的私钥加密摘要得到的结果")])]),t._v(" "),a("h4",{attrs:{id:"验证过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证过程"}},[t._v("#")]),t._v(" 验证过程")]),t._v(" "),a("ol",[a("li",[t._v("浏览器收到证书")]),t._v(" "),a("li",[t._v("用浏览器内置的证书颁发机构(CA)公钥解密数字签名,得到结果a")]),t._v(" "),a("li",[t._v("用证书里的证书签名算法将明文信息转成摘要,得到结果b")]),t._v(" "),a("li",[t._v("将a和b对比,若一样则可信")])]),t._v(" "),a("h4",{attrs:{id:"证书可篡改吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#证书可篡改吗"}},[t._v("#")]),t._v(" 证书可篡改吗")]),t._v(" "),a("p",[t._v("不能. 首先中间人没有网站私钥,不能生产数字签名;其次,改了任何一处信息,解密得到的结果都和明文信息不一致")]),t._v(" "),a("h4",{attrs:{id:"证书可掉包吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#证书可掉包吗"}},[t._v("#")]),t._v(" 证书可掉包吗")]),t._v(" "),a("p",[t._v("不能. 浏览器会检查明文信息里的域名. 若掉包, 证书里包含的域名就和请求的域名不一致了.")]),t._v(" "),a("h3",{attrs:{id:"ssl握手过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssl握手过程"}},[t._v("#")]),t._v(" ssl握手过程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://segmentfault.com/img/bVbCCMD/view",alt:"https://segmentfault.com/img/bVbCCMD/view"}})]),t._v(" "),a("h2",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" cookie")]),t._v(" "),a("h3",{attrs:{id:"会话-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#会话-cookie"}},[t._v("#")]),t._v(" 会话 cookie")]),t._v(" "),a("p",[t._v("如果不设置过期时间，则表示这个 cookie 生命周期为从创建到浏览器关闭为止，只要关闭浏览器窗口，cookie 就消失了。这种生命期为浏览会话期的 cookie 被称为会话 cookie。会话 cookie 一般不保存在硬盘上而是保存在内存里。")]),t._v(" "),a("h3",{attrs:{id:"持久-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久-cookie"}},[t._v("#")]),t._v(" 持久 cookie")]),t._v(" "),a("p",[t._v("如果设置了过期时间，浏览器就会把 cookie 保存到硬盘上，关闭后再次打开浏览器，这些 cookie 依然有效直到超过设定的过期时间。存储在硬盘上的 cookie 可以在不同的浏览器进程间共享，比如两个 IE 窗口。而对于保存在内存的 cookie，不同的浏览器有不同的处理方式。")]),t._v(" "),a("h3",{attrs:{id:"js设置cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js设置cookie"}},[t._v("#")]),t._v(" js设置cookie")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username=John Doe; expires=Thu, 18 Dec 2043 12:00:00 GMT; path=/"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"cookie属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie属性"}},[t._v("#")]),t._v(" cookie属性")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("name")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("value")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("domain")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("path")])]),t._v(" "),a("p",[t._v("可以访问此cookie的页面路径。 比如domain是abc.com,path是/test，那么只有/test路径下的页面可以读取此cookie")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Expires/Max-age")])]),t._v(" "),a("p",[t._v("此cookie超时时间。若设置其值为一个时间，那么当到达此时间后，此cookie失效。不设置的话默认值是Session，意思是cookie会和session一起失效。当浏览器关闭(不是浏览器标签页，而是整个浏览器) 后，此cookie失效")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Size")])]),t._v(" "),a("p",[t._v("此cookie大小")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("HttpOnly")])]),t._v(" "),a("p",[t._v("若此属性为true，则只有在http请求头中会带有此cookie的信息，而不能通过document.cookie来访问此cookie")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Secure")])]),t._v(" "),a("p",[t._v("设置是否只能通过https来传递此条cookie")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("SameSite")])]),t._v(" "),a("p",[t._v("用来限制第三方 Cookie，从而减少安全风险。")]),t._v(" "),a("p",[t._v("它可以设置三个值。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Strict")]),t._v(" "),a("p",[t._v("最严格的模式，完全禁止跨站点请求时携带cookie，设置为strict之后，跨站行为都不会再携带cookie")])]),t._v(" "),a("li",[a("p",[t._v("Lax")]),t._v(" "),a("p",[t._v("此模式相对strict模式会宽松一点儿，允许导航到三方网站时携带cookie，即a标签跳转，form表单的get提交，以及link标签的prerender")])]),t._v(" "),a("li",[a("p",[t._v("None")])])]),t._v(" "),a("p",[a("strong",[t._v("Priority")])])])]),t._v(" "),a("h2",{attrs:{id:"jsonp跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsonp跨域"}},[t._v("#")]),t._v(" jsonp跨域")]),t._v(" "),a("p",[t._v("主要利用"),a("code",[t._v("<script>")]),t._v("标签中的src具有跨域的特性")]),t._v(" "),a("p",[t._v("过程:")]),t._v(" "),a("ol",[a("li",[t._v("利用src向服务器请求一个js文件, 并在url请求后添加callback参数指定回调函数")]),t._v(" "),a("li",[t._v("js文件的内容是执行一段本地的代码,并将返回值以json形式作为参数传递进去,进而调用")])]),t._v(" "),a("p",[t._v("示例:")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),a("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      var localHandler = function(data){\n          alert('我是本地函数，可以被跨域的remote.js文件调用，远程js带来的数据是：' + data.result);\n      };\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://remoteserver.com/remote.js && callback=localHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[a("code",[t._v("remote.js")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("localHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"result"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是远程js带来的数据"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"典型协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#典型协议"}},[t._v("#")]),t._v(" 典型协议：")]),t._v(" "),a("p",[t._v("传输层： 常见的协议有 TCP/UDP 协议")]),t._v(" "),a("p",[t._v("应用层： 常见的协议有 HTTP，FTP 协议")]),t._v(" "),a("p",[t._v("网络层： 常见的协议有 IP 协议，ICMP 协议，IGMP 协议")]),t._v(" "),a("p",[t._v("网络接口层： 常见的协议有 ARP 协议，RARP 协议")]),t._v(" "),a("h2",{attrs:{id:"杂项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#杂项"}},[t._v("#")]),t._v(" 杂项")]),t._v(" "),a("ul",[a("li",[t._v("connect 设置为keep-alive 与 content-length 的关系？")])]),t._v(" "),a("p",[t._v("https://segmentfault.com/a/1190000008359278")]),t._v(" "),a("h2",{attrs:{id:"遇到的实际问题记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遇到的实际问题记录"}},[t._v("#")]),t._v(" 遇到的实际问题记录")]),t._v(" "),a("ol",[a("li",[t._v("使用srcipt标签出现跨域")])]),t._v(" "),a("p",[t._v("使用下面这个写法会出现跨域问题")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("crossorigin")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("anonymous"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("https://stackoverflow.com/foo.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("简单介绍一下，在HTML5中，一些 HTML 元素提供了对 CORS 的支持， 例如 "),a("code",[t._v("<audio>")]),t._v("、"),a("code",[t._v("<img>")]),t._v("、"),a("code",[t._v("<link>")]),t._v("、"),a("code",[t._v("<script>")]),t._v(" 和 "),a("code",[t._v("<video>")]),t._v(" 均有一个跨域属性 (crossOrigin property)，它允许你配置元素获取数据的 CORS 请求")]),t._v(" "),a("p",[t._v("原因： crossorigin有三种类型，分别是"),a("code",[t._v("anonymous")]),t._v(", "),a("code",[t._v("use-credentials")]),t._v('和缺省值。当crossorigin 是缺省值的时候，浏览器不会进行跨域检查，但如果请求的文件逻辑出错的时候，不会显示报错信息。如果需要显示报错信息，就需要使用crossorigin字段，在非同源情况下，设置 "anonymous" 关键字将不会通过 cookies，客户端 SSL 证书或 HTTP 认证交换用户凭据。但无论如何，存在crossorigin时，响应头里应该要含有'),a("code",[t._v("Access-Control-Allow-Origin")]),t._v("字段。")])])}),[],!1,null,null,null);e.default=r.exports}}]);