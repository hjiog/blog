(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{538:function(t,a,s){"use strict";s.r(a);var n=s(3),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"浏览器渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染"}},[t._v("#")]),t._v(" 浏览器渲染")]),t._v(" "),s("ul",[s("li",[t._v("构建CSSOM并不需要等待所有DOM都构建完毕。而是在解析HTML构建DOM时，若遇见CSS会立刻构建CSSOM。即DOM 和 CSSOM 是并行构建的。 构建CSSOM和构建DOM是可以同时进行的")]),t._v(" "),s("li",[t._v("加载css会阻塞渲染，但不会阻塞解析dom")]),t._v(" "),s("li",[t._v("css加载会阻塞后面js语句的执行")])]),t._v(" "),s("h2",{attrs:{id:"缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),s("h3",{attrs:{id:"强缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),s("h5",{attrs:{id:"expires"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" Expires")]),t._v(" "),s("p",[t._v("Expires是HTTP/1.0控制网页缓存的字段，其值为服务器返回该请求结果缓存的到期时间，即再次发起该请求时，如果客户端的时间小于Expires的值时，直接使用缓存结果。")]),t._v(" "),s("p",[t._v("到了HTTP/1.1，Expire已经被Cache-Control替代，原因在于Expires控制缓存的原理是使用客户端的时间与服务端返回的时间做对比，那么如果客户端与服务端的时间因为某些原因（例如时区不同；客户端和服务端有一方的时间不准确）发生误差，那么强制缓存则会直接失效.")]),t._v(" "),s("h5",{attrs:{id:"cache-control"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),s("p",[t._v("在HTTP/1.1中，Cache-Control是最重要的规则，主要用于控制网页缓存，Cache-Control的优先级高于Expires,主要取值为：")]),t._v(" "),s("ul",[s("li",[t._v("public：所有内容都将被缓存（客户端和代理服务器都可缓存）")]),t._v(" "),s("li",[t._v("private：所有内容只有客户端可以缓存，Cache-Control的默认取值")]),t._v(" "),s("li",[t._v("no-cache：客户端缓存内容，但是是否使用缓存则需要经过协商缓存来验证决定")]),t._v(" "),s("li",[t._v("no-store：所有内容都不会被缓存，即不使用强制缓存，也不使用协商缓存")]),t._v(" "),s("li",[t._v("max-age=xxx (xxx is numeric)：缓存内容将在xxx秒后失效")])]),t._v(" "),s("h4",{attrs:{id:"from-memory-cache-和-from-disk-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#from-memory-cache-和-from-disk-cache"}},[t._v("#")]),t._v(" from memory cache 和 from disk cache")]),t._v(" "),s("p",[t._v("在浏览器中，浏览器会在js和图片等文件解析执行后直接存入内存缓存中，那么当刷新页面时只需直接从内存缓存中读取(from memory cache)；而css文件则会存入硬盘文件中，所以每次渲染页面都需要从硬盘读取缓存(from disk cache)。")]),t._v(" "),s("p",[t._v("每次刷新页面能看到from memory cache 和 from disk cache并存;")]),t._v(" "),s("p",[t._v("关掉页面重新打开则看不到 from memory cache  了")]),t._v(" "),s("h3",{attrs:{id:"协商缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),s("h5",{attrs:{id:"last-modified-if-modified-since"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-if-modified-since"}},[t._v("#")]),t._v(" Last-Modified / If-Modified-Since")]),t._v(" "),s("p",[t._v("Last-Modified是服务器响应请求时，返回该资源文件在服务器最后被修改的时间;")]),t._v(" "),s("p",[t._v("If-Modified-Since则是客户端再次发起该请求时，携带上次请求返回的Last-Modified值，通过此字段值告诉服务器该资源上次请求返回的最后被修改时间。服务器收到该请求，发现请求头含有If-Modified-Since字段，则会根据If-Modified-Since的字段值与该资源在服务器的最后被修改时间做对比，若服务器的资源最后被修改时间大于If-Modified-Since的字段值，则重新返回资源，状态码为200；否则则返回304，代表资源无更新，可继续使用缓存文件")]),t._v(" "),s("h5",{attrs:{id:"etag-if-none-match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#etag-if-none-match"}},[t._v("#")]),t._v(" Etag / If-None-Match")]),t._v(" "),s("p",[t._v("Etag是服务器响应请求时，返回当前资源文件的一个唯一标识(由服务器生成);")]),t._v(" "),s("p",[t._v("If-None-Match是客户端再次发起该请求时，携带上次请求返回的唯一标识Etag值，通过此字段值告诉服务器该资源上次请求返回的唯一标识值。服务器收到该请求后，发现该请求头中含有If-None-Match，则会根据If-None-Match的字段值与该资源在服务器的Etag值做对比，一致则返回304，代表资源无更新，继续使用缓存文件；不一致则重新返回资源文件，状态码为200.")]),t._v(" "),s("h4",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("强制缓存优先于协商缓存进行，若强制缓存(Expires和Cache-Control)生效则直接使用缓存，若不生效则进行协商缓存(Last-Modified / If-Modified-Since和Etag / If-None-Match)，协商缓存由服务器决定是否使用缓存，若协商缓存失效，那么代表该请求的缓存失效，重新获取请求结果，再存入浏览器缓存中；生效则返回304，继续使用缓存，")]),t._v(" "),s("h2",{attrs:{id:"bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" Bom")]),t._v(" "),s("p",[t._v("Bom是浏览器对象,常用的属性如下")]),t._v(" "),s("h4",{attrs:{id:"location对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location对象"}},[t._v("#")]),t._v(" location对象")]),t._v(" "),s("p",[t._v("location.href-- 返回或设置当前文档的URL\nlocation.search -- 返回URL中的查询字符串部分。例如 http://www.dreamdu.com/dreamdu.php?id=5&name=dreamdu 返回包括(?)后面的内容?id=5&name=dreamdu\nlocation.hash -- 返回URL#后面的内容，如果没有#，返回空\nlocation.host -- 返回URL中的域名部分，例如www.dreamdu.com (http://localhost:8080/path/==> localhost:8080 本机试了包含端口号)\nlocation.hostname -- 返回URL中的主域名部分，例如dreamdu.com\nlocation.pathname -- 返回URL的域名后的部分。例如 http://www.dreamdu.com/xhtml/ 返回/xhtml/\nlocation.port -- 返回URL中的端口部分。例如 http://www.dreamdu.com:8080/xhtml/ 返回8080\nlocation.protocol -- 返回URL中的协议部分。例如 http://www.dreamdu.com:8080/xhtml/ 返回(//)前面的内容http:\nlocation.assign -- 设置当前文档的URL\nlocation.replace() -- 设置当前文档的URL，并且在history对象的地址列表中移除这个URL location.replace(url);\nlocation.reload() -- 重载当前页面")]),t._v(" "),s("h4",{attrs:{id:"history对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history对象"}},[t._v("#")]),t._v(" history对象")]),t._v(" "),s("p",[t._v("history.go() -- 前进或后退指定的页面数 history.go(num);\nhistory.back() -- 后退一页\nhistory.forward() -- 前进一页")]),t._v(" "),s("h4",{attrs:{id:"navigator对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#navigator对象"}},[t._v("#")]),t._v(" Navigator对象")]),t._v(" "),s("p",[t._v("navigator.userAgent -- 返回用户代理头的字符串表示(就是包括浏览器版本信息等的字符串)\nnavigator.cookieEnabled -- 返回浏览器是否支持(启用)cookie")]),t._v(" "),s("h2",{attrs:{id:"hash-模式和-history-模式对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-模式和-history-模式对比"}},[t._v("#")]),t._v(" Hash 模式和 History 模式对比")]),t._v(" "),s("h3",{attrs:{id:"相同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[t._v("#")]),t._v(" 相同点")]),t._v(" "),s("p",[t._v("可以将url替换并且不刷新页面")]),t._v(" "),s("h3",{attrs:{id:"不同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[t._v("#")]),t._v(" 不同点")]),t._v(" "),s("h4",{attrs:{id:"长相"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#长相"}},[t._v("#")]),t._v(" 长相")]),t._v(" "),s("p",[t._v("Hash模式的url带有#号,而history模式则是正常的url")]),t._v(" "),s("h4",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),s("p",[t._v("Hash模式利用了"),s("code",[t._v("window")]),t._v("可以监听"),s("code",[t._v("onhashchange")]),t._v("事件")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hashchange"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" currentUrl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("得到#后面的参数为")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("currentUrl"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("History 模式")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由跳转")]),t._v("\nul"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"href"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 改变url")]),t._v("\n        history"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渲染对应的页面")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"popstate"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当用户点击浏览器的前进或者后退触发")]),t._v("\n       console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渲染对应的页面")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("h4",{attrs:{id:"后端支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后端支持"}},[t._v("#")]),t._v(" 后端支持")]),t._v(" "),s("p",[t._v("Hash模式不需要后端支持;")]),t._v(" "),s("p",[t._v("History 模式需要:")]),t._v(" "),s("p",[t._v("例如, 当刷新时 index.html/test 时, 由于后端无法匹配到对应的url, 会返回 404 ,因此后端应设置无法匹配时返回index.html.")]),t._v(" "),s("p",[t._v("但这样的话就无法返回404页面了, 因此需要前端设置路由匹配规则, 匹配不到则渲染404页面.")]),t._v(" "),s("h4",{attrs:{id:"补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),s("h5",{attrs:{id:"history基本api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history基本api"}},[t._v("#")]),t._v(" history基本api")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("history.go(n)")]),t._v("：路由跳转几步，n为2往前跳转2个页面，-2往后跳转两个页面")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("history.back()")]),t._v("：路由后退，相当于 "),s("code",[t._v("history.go(-1)")]),t._v("，用户可点击浏览器左上角的后退按钮模拟此方法")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("history.forward()")]),t._v("：路由前进，相当于 "),s("code",[t._v("history.go(1)")]),t._v("，用户可点击浏览器左上角的前进按钮模拟此方法")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("pushState()")]),t._v(":添加一条路由历史记录，如果设置跨域网址则报错")])])]),t._v(" "),s("p",[s("code",[t._v("history.pushState")]),t._v("用于在浏览历史中添加历史记录,但是并不触发跳转,此方法接受三个参数，依次为：\n"),s("code",[t._v("state")]),t._v(":一个与指定网址相关的状态对象，"),s("code",[t._v("popstate")]),t._v("事件触发时，该对象会传入回调函数。如果不需要这个对象，此处可以填"),s("code",[t._v("null")]),t._v("。\n"),s("code",[t._v("title")]),t._v("：新页面的标题，但是所有浏览器目前都忽略这个值，因此这里可以填"),s("code",[t._v("null")]),t._v("。\n"),s("code",[t._v("url")]),t._v("：新的网址，必须与当前页面处在同一个域。浏览器的地址栏将显示这个网址。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("popstate事件")]),t._v(" "),s("p",[t._v("当活动历史记录条目更改时，将触发popstate事件。如果被激活的历史记录条目是通过对history.pushState（）的调用创建的，或者受到对history.replaceState（）的调用的影响，popstate事件的state属性包含历史条目的状态对象的副本。\n需要注意的是调用history.pushState()或history.replaceState()不会触发popstate事件。只有在做出浏览器动作时，才会触发该事件，如用户点击浏览器的回退按钮（或者在Javascript代码中调用history.back()）")])])]),t._v(" "),s("h2",{attrs:{id:"浏览器运行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器运行机制"}},[t._v("#")]),t._v(" 浏览器运行机制")]),t._v(" "),s("h3",{attrs:{id:"进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[t._v("#")]),t._v(" 进程")]),t._v(" "),s("h4",{attrs:{id:"浏览器进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器进程"}},[t._v("#")]),t._v(" 浏览器进程")]),t._v(" "),s("p",[t._v("浏览器进程是浏览器的主线程，主要负责浏览器的页面管理，如果页面创建、页面关闭、页面前进后退，也负责网络资源下载管理等，该进程对应上述浏览器组成中的浏览器引擎，整个浏览器应用程序只有一个。")]),t._v(" "),s("h4",{attrs:{id:"gpu进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gpu进程"}},[t._v("#")]),t._v(" GPU进程")]),t._v(" "),s("p",[t._v("负责GPU(Graphic Processing Unit，图形处理器)渲染，界面绘制，整个浏览器应用程序只有一个。")]),t._v(" "),s("h4",{attrs:{id:"网络进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络进程"}},[t._v("#")]),t._v(" 网络进程")]),t._v(" "),s("p",[t._v("负责网络请求相关操作，整个浏览器应用程序只有一个。")]),t._v(" "),s("h4",{attrs:{id:"插件进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件进程"}},[t._v("#")]),t._v(" 插件进程")]),t._v(" "),s("p",[t._v("浏览器安装的插件(扩展程序)，每个插件会创建一个进程，比如掘金插件、印象笔记插件等，所以一个浏览器有可以包含多个插件进程。")]),t._v(" "),s("h4",{attrs:{id:"渲染进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程"}},[t._v("#")]),t._v(" 渲染进程")]),t._v(" "),s("p",[t._v("渲染进程是浏览器的内核进程，负责页面渲染、JS脚本的执行，页面事件的处理等，对应的是上述的渲染引擎和JS引擎，在浏览器中，每个Tab窗口页对应一个渲染进程，所以一个浏览器可以包含多个渲染进程。")])])}),[],!1,null,null,null);a.default=e.exports}}]);